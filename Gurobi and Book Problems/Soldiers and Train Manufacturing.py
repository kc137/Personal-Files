import pyomo.environ as pyo, numpy as np
from pyomo.opt import SolverFactory

model = pyo.ConcreteModel()

products = ["Soldiers", "Trains"]

# Vars

model.x1 = pyo.Var(domain = pyo.NonNegativeIntegers, bounds = (0, 40))
x1 = model.x1

model.x2 = pyo.Var(domain = pyo.NonNegativeIntegers, bounds = (0, None))
x2 = model.x2

# Constraints

def Cons1(model):
    return 2*x1 + x2 <= 100
model.C1 = pyo.Constraint(rule = Cons1)

def Cons2(model):
    return x1 + x2 <= 80
model.C2 = pyo.Constraint(rule = Cons2)

# Objective Function

def Obj_Fn(model):
    return 3*x1 + 2*x2
model.Obj = pyo.Objective(rule = Obj_Fn, sense = pyo.maximize)

sol = SolverFactory("couenne")
res = sol.solve(model)

print("Total Soldiers produced are", x1(), "units")
print("Total Trains produced are", x2(), "units")
print("Total profit generated by selling Wooden Soldiers and Wooden Trains is", model.Obj(), "$")